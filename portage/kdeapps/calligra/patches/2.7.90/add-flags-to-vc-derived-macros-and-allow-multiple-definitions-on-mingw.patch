diff -Nru -x '*~' calligra-2.7.90.orig/CMakeLists.txt calligra-2.7.90/CMakeLists.txt
--- calligra-2.7.90.orig/CMakeLists.txt	2014-01-15 23:49:57.935360700 -0200
+++ calligra-2.7.90/CMakeLists.txt	2014-01-15 18:38:16.817984500 -0200
@@ -515,7 +515,21 @@
 
         macro(ko_compile_for_all_implementations_no_scalar _objs _src)
         if(PACKAGERS_BUILD)
-            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS -fPIC ONLY SSE2 SSSE3 SSE4_1 AVX AVX2)
+            set(_flags)
+            if(NOT MSVC)
+                set(_flags ${_flags} -fPIC)
+            endif(NOT MSVC)
+            set(_state 0)
+            foreach(_arg ${ARGN})
+                if(_arg STREQUAL "FLAGS")
+                    set(_state 1)
+                elseif(_state EQUAL 1)
+                    set(_flags "${_flags} ${_arg}")
+                else()
+                    message(FATAL_ERROR "incorrect argument to ko_compile_for_all_implementations_no_scalar")
+                endif()
+            endforeach()
+            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS ${_flags} ONLY SSE2 SSSE3 SSE4_1 AVX AVX2)
         else(PACKAGERS_BUILD)
             set(${_objs} ${_src})
         endif(PACKAGERS_BUILD)
@@ -523,7 +537,21 @@
 
         macro(ko_compile_for_all_implementations _objs _src)
         if(PACKAGERS_BUILD)
-            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS -fPIC ONLY Scalar SSE2 SSSE3 SSE4_1 AVX AVX2)
+            set(_flags)
+            if(NOT MSVC)
+                set(_flags ${_flags} -fPIC)
+            endif(NOT MSVC)
+            set(_state 0)
+            foreach(_arg ${ARGN})
+                if(_arg STREQUAL "FLAGS")
+                    set(_state 1)
+                elseif(_state EQUAL 1)
+                    set(_flags "${_flags} ${_arg}")
+                else()
+                    message(FATAL_ERROR "incorrect argument to ko_compile_for_all_implementations")
+                endif()
+            endforeach()
+            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS ${_flags} ONLY Scalar SSE2 SSSE3 SSE4_1 AVX AVX2)
         else(PACKAGERS_BUILD)
             set(${_objs} ${_src})
         endif(PACKAGERS_BUILD)
@@ -531,7 +559,21 @@
     else()
         macro(ko_compile_for_all_implementations_no_scalar _objs _src)
         if(PACKAGERS_BUILD)
-            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS -fPIC ONLY SSE2 SSSE3 SSE4_1 AVX)
+            set(_flags)
+            if(NOT MSVC)
+                set(_flags ${_flags} -fPIC)
+            endif(NOT MSVC)
+            set(_state 0)
+            foreach(_arg ${ARGN})
+                if(_arg STREQUAL "FLAGS")
+                    set(_state 1)
+                elseif(_state EQUAL 1)
+                    set(_flags "${_flags} ${_arg}")
+                else()
+                    message(FATAL_ERROR "incorrect argument to ko_compile_for_all_implementations_no_scalar")
+                endif()
+            endforeach()
+            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS ${_flags} ONLY SSE2 SSSE3 SSE4_1 AVX)
         else(PACKAGERS_BUILD)
             set(${_objs} ${_src})
         endif(PACKAGERS_BUILD)
@@ -539,7 +581,21 @@
 
         macro(ko_compile_for_all_implementations _objs _src)
         if(PACKAGERS_BUILD)
-            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS -fPIC ONLY Scalar SSE2 SSSE3 SSE4_1 AVX)
+            set(_flags)
+            if(NOT MSVC)
+                set(_flags ${_flags} -fPIC)
+            endif(NOT MSVC)
+            set(_state 0)
+            foreach(_arg ${ARGN})
+                if(_arg STREQUAL "FLAGS")
+                    set(_state 1)
+                elseif(_state EQUAL 1)
+                    set(_flags "${_flags} ${_arg}")
+                else()
+                    message(FATAL_ERROR "incorrect argument to ko_compile_for_all_implementations")
+                endif()
+            endforeach()
+            vc_compile_for_all_implementations(${_objs} ${_src} FLAGS ${_flags} ONLY Scalar SSE2 SSSE3 SSE4_1 AVX)
         else(PACKAGERS_BUILD)
             set(${_objs} ${_src})
         endif(PACKAGERS_BUILD)
@@ -550,6 +606,12 @@
       # Optimize the whole Calligra for current architecture
       set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Vc_DEFINITIONS}")
     endif (NOT PACKAGERS_BUILD)
+
+    if(MINGW)
+        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--allow-multiple-definition")
+        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--allow-multiple-definition")
+        set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -Wl,--allow-multiple-definition")
+    endif(MINGW)
 endif(HAVE_VC)
 set(CMAKE_MODULE_PATH ${OLD_CMAKE_MODULE_PATH} )
 
diff -Nru -x '*~' calligra-2.7.90.orig/krita/image/CMakeLists.txt calligra-2.7.90/krita/image/CMakeLists.txt
--- calligra-2.7.90.orig/krita/image/CMakeLists.txt	2014-01-15 23:49:57.937362000 -0200
+++ calligra-2.7.90/krita/image/CMakeLists.txt	2014-01-15 18:38:16.794969300 -0200
@@ -55,7 +55,7 @@
 
 if(HAVE_VC)
   include_directories(${Vc_INCLUDE_DIR})
-  ko_compile_for_all_implementations(__per_arch_circle_mask_generator_objs kis_brush_mask_applicator_factories.cpp)
+  ko_compile_for_all_implementations(__per_arch_circle_mask_generator_objs kis_brush_mask_applicator_factories.cpp FLAGS -DMAKE_KRITAIMAGE_LIB)
 else(HAVE_VC)
   set(__per_arch_circle_mask_generator_objs kis_brush_mask_applicator_factories.cpp)
 endif(HAVE_VC)
diff -Nru -x '*~' calligra-2.7.90.orig/libs/pigment/CMakeLists.txt calligra-2.7.90/libs/pigment/CMakeLists.txt
--- calligra-2.7.90.orig/libs/pigment/CMakeLists.txt	2013-12-01 16:24:25.000000000 -0200
+++ calligra-2.7.90/libs/pigment/CMakeLists.txt	2014-01-15 18:38:16.796971500 -0200
@@ -23,7 +23,7 @@
 if(HAVE_VC)
     include_directories(${Vc_INCLUDE_DIR})
     set(LINK_VC_LIB ${Vc_LIBRARIES})
-    ko_compile_for_all_implementations_no_scalar(__per_arch_factory_objs compositeops/KoOptimizedCompositeOpFactoryPerArch.cpp)
+    ko_compile_for_all_implementations_no_scalar(__per_arch_factory_objs compositeops/KoOptimizedCompositeOpFactoryPerArch.cpp FLAGS -DMAKE_PIGMENTCMS_LIB)
 
     message("Following objects are generated from the per-arch lib")
     message(${__per_arch_factory_objs})
