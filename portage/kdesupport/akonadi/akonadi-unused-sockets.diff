diff -Nru -x '*~' akonadi-1.9.2.orig/libs/xdgbasedirs.cpp akonadi-1.9.2/libs/xdgbasedirs.cpp
--- akonadi-1.9.2.orig/libs/xdgbasedirs.cpp	2013-06-27 17:42:10.701790900 +0200
+++ akonadi-1.9.2/libs/xdgbasedirs.cpp	2013-06-18 23:28:47.766080500 +0200
@@ -198,13 +198,16 @@
     return instance()->mDataHome;
   } else if ( qstrncmp( "config", resource, 6 ) == 0 ) {
     if ( instance()->mConfigHome.isEmpty() ) {
+      qDebug() << "trying to access configHome" << kdeconf;
 #ifdef Q_OS_WIN
       if(kdeconf) {
+         qDebug() << "kdeconf exists!";
          kdeconf->beginGroup(QLatin1String("XDG"));
-         if(kdeconf->childKeys().contains(QLatin1String("XDG_CONFIG_HOME")))
+         if(kdeconf->childKeys().contains(QLatin1String("XDG_CONFIG_HOME"))) {
            instance()->mConfigHome = expandEnvironmentVariables(kdeconf->value(QLatin1String("XDG_CONFIG_HOME")).toString());
-         else
+         } else {
            instance()->mConfigHome = instance()->homePath( "XDG_CONFIG_HOME", ".config" );
+         }
          kdeconf->endGroup();
       } else {
 #else
@@ -213,6 +216,7 @@
         instance()->mConfigHome = instance()->homePath( "XDG_CONFIG_HOME", ".config" );
       }
     }
+    qDebug() << "returning" << instance()->mConfigHome;
     return instance()->mConfigHome;
   }
 
@@ -527,10 +531,12 @@
 QString XdgBaseDirs::saveDir( const char *resource, const QString &relPath )
 {
   const QString fullPath = homePath( resource ) + QLatin1Char( '/' ) + relPath;
+  qDebug() << "fullPath:" << fullPath << resource << relPath;
 
   QFileInfo fileInfo( fullPath );
   if ( fileInfo.exists() ) {
     if ( fileInfo.isDir() ) {
+      qDebug() << "fullPath is a dir";
       return fullPath;
     } else {
       qWarning() << "XdgBaseDirs::saveDir: '" << fileInfo.absoluteFilePath()
@@ -541,21 +547,27 @@
       qWarning() << "XdgBaseDirs::saveDir: failed to create directory '"
                  << fileInfo.absoluteFilePath() << "'";
     } else {
+      qDebug() << "created fullPath";
       return fullPath;
     }
   }
 
+  qDebug() << "leaving without doing anything!";
   return QString();
 }
 
 QString XdgBaseDirs::akonadiServerConfigFile( FileAccessMode openMode )
 {
-  return akonadiConfigFile( QLatin1String( "akonadiserverrc" ), openMode );
+  QString sc = akonadiConfigFile( QLatin1String( "akonadiserverrc" ), openMode );
+  qDebug() << "akonadiServerConfigFile" << sc;
+  return sc;
 }
 
 QString XdgBaseDirs::akonadiConnectionConfigFile( FileAccessMode openMode )
 {
-  return akonadiConfigFile( QLatin1String( "akonadiconnectionrc" ), openMode );
+  QString cc = akonadiConfigFile( QLatin1String( "akonadiconnectionrc" ), openMode );
+  qDebug() << "akonadiConnectionConfigFile" << cc;
+  return cc;
 }
 
 QString XdgBaseDirs::akonadiConfigFile( const QString &file, FileAccessMode openMode )
@@ -563,6 +575,7 @@
   const QString akonadiDir = QLatin1String( "akonadi" );
 
   const QString savePath = saveDir( "config", akonadiDir ) + QLatin1Char( '/' ) + file;
+  qDebug() << "akonadiConfigFile" << savePath << file << findResourceFile( "config", akonadiDir + QLatin1Char( '/' ) + file );
 
   if ( openMode == WriteOnly )
     return savePath;
@@ -587,7 +600,7 @@
 QString XdgBaseDirsSingleton::homePath( const char *variable, const char *defaultSubDir )
 {
   const QByteArray env = qgetenv( variable );
-
+  qDebug() << "homePath" << env << variable << defaultSubDir;
   QString xdgPath;
   if ( env.isEmpty() ) {
     xdgPath = QDir::homePath() + QLatin1Char( '/' ) + QLatin1String( defaultSubDir );
@@ -600,7 +613,7 @@
   } else {
     xdgPath = QDir::homePath() + QLatin1Char( '/' ) + QString::fromLocal8Bit( env );
   }
-
+  qDebug() << "homePath" << xdgPath;
   return xdgPath;
 }
 
diff -Nru -x '*~' akonadi-1.9.2.orig/server/src/storage/dbconfigmysql.cpp akonadi-1.9.2/server/src/storage/dbconfigmysql.cpp
--- akonadi-1.9.2.orig/server/src/storage/dbconfigmysql.cpp	2013-05-05 10:40:58.000000000 +0200
+++ akonadi-1.9.2/server/src/storage/dbconfigmysql.cpp	2013-06-27 17:32:30.928629700 +0200
@@ -57,7 +57,10 @@
   QString defaultServerPath;
   QString defaultCleanShutdownCommand;
 
-  const QString socketDirectory = Utils::preferredSocketDirectory( AkStandardDirs::saveDir( "data", QLatin1String( "db_misc" ) ) );
+#ifndef Q_OS_WIN
+  const QString socketDirectory = Utils::preferredSocketDirectory( AkStandardDirs::saveDir( "data", QLatin1String( "db_misc" ) )
+  );
+#endif
 
   const bool defaultInternalServer = true;
 #ifdef MYSQLD_EXECUTABLE
@@ -169,7 +172,9 @@
 
   const QString akDir   = AkStandardDirs::saveDir( "data" );
   const QString dataDir = AkStandardDirs::saveDir( "data", QLatin1String( "db_data" ) );
+#ifndef Q_OS_WIN
   const QString socketDirectory = Utils::preferredSocketDirectory( AkStandardDirs::saveDir( "data", QLatin1String( "db_misc" ) ) );
+#endif
 
   // generate config file
   const QString globalConfig = XdgBaseDirs::findResourceFile( "config", QLatin1String( "akonadi/mysql-global.conf" ) );
@@ -218,12 +223,14 @@
   if ( akDir.isEmpty() )
     akFatal() << "Akonadi server was not able to create database log directory";
 
+#ifndef Q_OS_WIN
   if ( socketDirectory.isEmpty() )
     akFatal() << "Akonadi server was not able to create database misc directory";
 
   // the socket path must not exceed 103 characters, so check for max dir length right away
   if ( socketDirectory.length() >= 90 )
       akFatal() << "MySQL cannot deal with a socket path this long. Path was: " << socketDirectory;
+#endif
 
   // move mysql error log file out of the way
   const QFileInfo errorLog( dataDir + QDir::separator() + QString::fromLatin1( "mysql.err" ) );
@@ -308,7 +315,10 @@
                                                     << QLatin1String( "--check-upgrade" )
                                                     << QLatin1String( "--all-databases" )
                                                     << QLatin1String( "--auto-repair" )
-                                                    << QString::fromLatin1( "--socket=%1/mysql.socket" ).arg( socketDirectory );
+#ifndef Q_OS_WIN
+                                                    << QString::fromLatin1( "--socket=%1/mysql.socket" ).arg( socketDirectory )
+#endif
+                                                    ;
         QProcess::execute( mMysqlCheckPath, arguments );
       }
 
