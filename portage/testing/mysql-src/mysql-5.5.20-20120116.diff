diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/client/mysqlslap.c mysql-5.5.20/client/mysqlslap.c
--- mysql-5.5.20.orig/client/mysqlslap.c	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/client/mysqlslap.c	2012-01-17 15:53:50.506978000 +0100
@@ -279,7 +279,7 @@
     return s + us;
 }
 
-#ifdef __WIN__
+#ifdef _MSC_VER
 static int gettimeofday(struct timeval *tp, void *tzp)
 {
   unsigned int ticks;
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/cmake/libutils.cmake mysql-5.5.20/cmake/libutils.cmake
--- mysql-5.5.20.orig/cmake/libutils.cmake	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/cmake/libutils.cmake	2012-01-17 15:41:04.233345400 +0100
@@ -65,7 +65,7 @@
 # that references all exports and this prevents linker from creating an 
 # empty library(there are unportable alternatives, --whole-archive)
 MACRO(CREATE_EXPORT_FILE VAR TARGET API_FUNCTIONS)
-  IF(WIN32)
+  IF(MSVC)
     SET(DUMMY ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}_dummy.c)
     SET(EXPORTS ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}_exports.def)
     CONFIGURE_FILE_CONTENT("" ${DUMMY})
@@ -197,7 +197,7 @@
         @ONLY
       )
       ADD_CUSTOM_COMMAND(TARGET ${TARGET} POST_BUILD
-        COMMAND rm ${TARGET_LOCATION}
+        COMMAND cmake remove -E ${TARGET_LOCATION}
         COMMAND ${CMAKE_COMMAND} -P 
         ${CMAKE_CURRENT_BINARY_DIR}/merge_archives_${TARGET}.cmake
       )
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/cmake/os/Windows.cmake mysql-5.5.20/cmake/os/Windows.cmake
--- mysql-5.5.20.orig/cmake/os/Windows.cmake	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/cmake/os/Windows.cmake	2012-01-17 15:17:36.105291800 +0100
@@ -117,6 +117,12 @@
   ENDIF()
 ENDIF()
 
+IF(MINGW)
+    ADD_DEFINITIONS(-DMINGW_HAS_SECURE_API)
+    LINK_LIBRARIES(dbghelp)
+    SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} " -Wl,--enable-stdcall-fixup ")
+ENDIF()
+
 # Always link with socket library
 LINK_LIBRARIES(ws2_32)
 # ..also for tests
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/cmake/ssl.cmake mysql-5.5.20/cmake/ssl.cmake
--- mysql-5.5.20.orig/cmake/ssl.cmake	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/cmake/ssl.cmake	2012-01-17 14:44:39.324672200 +0100
@@ -66,14 +66,13 @@
     # Check for system library
     SET(OPENSSL_FIND_QUIETLY TRUE)
     INCLUDE(FindOpenSSL)
-    FIND_LIBRARY(CRYPTO_LIBRARY crypto)
-    MARK_AS_ADVANCED(CRYPTO_LIBRARY)
     INCLUDE(CheckSymbolExists)
+    SET(CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIR})
     CHECK_SYMBOL_EXISTS(SHA512_DIGEST_LENGTH "openssl/sha.h" 
                         HAVE_SHA512_DIGEST_LENGTH)
-    IF(OPENSSL_FOUND AND CRYPTO_LIBRARY AND HAVE_SHA512_DIGEST_LENGTH)
+    IF(OPENSSL_FOUND AND HAVE_SHA512_DIGEST_LENGTH)
       SET(SSL_SOURCES "")
-      SET(SSL_LIBRARIES ${OPENSSL_LIBRARIES} ${CRYPTO_LIBRARY})
+      SET(SSL_LIBRARIES ${OPENSSL_LIBRARIES})
       SET(SSL_INCLUDE_DIRS ${OPENSSL_INCLUDE_DIR})
       SET(SSL_INTERNAL_INCLUDE_DIRS "")
       SET(SSL_DEFINES "-DHAVE_OPENSSL")
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/CMakeLists.txt mysql-5.5.20/CMakeLists.txt
--- mysql-5.5.20.orig/CMakeLists.txt	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/CMakeLists.txt	2012-01-16 18:35:12.661401400 +0100
@@ -221,13 +221,13 @@
 
 
 # Set commonly used variables
-IF(WIN32)
-  SET(DEFAULT_MYSQL_HOME "C:/Program Files/MySQL/MySQL Server ${MYSQL_BASE_VERSION}" )
-  SET(SHAREDIR share)
-ELSE()
+# IF(WIN32)
+#   SET(DEFAULT_MYSQL_HOME "C:/Program Files/MySQL/MySQL Server ${MYSQL_BASE_VERSION}" )
+#   SET(SHAREDIR share)
+# ELSE()
   SET(DEFAULT_MYSQL_HOME ${CMAKE_INSTALL_PREFIX})
-  SET(SHAREDIR ${DEFAULT_MYSQL_HOME}/${INSTALL_MYSQLSHAREDIR})
-ENDIF()
+  SET(SHAREDIR share)
+# ENDIF()
 
 SET(DEFAULT_BASEDIR "${DEFAULT_MYSQL_HOME}")
 IF(INSTALL_MYSQLDATADIR MATCHES "^/.*")
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/config.h.cmake mysql-5.5.20/config.h.cmake
--- mysql-5.5.20.orig/config.h.cmake	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/config.h.cmake	2012-01-17 15:49:02.385378000 +0100
@@ -621,4 +621,21 @@
 #cmakedefine SIZEOF_TIME_T @SIZEOF_TIME_T@
 #cmakedefine TIME_T_UNSIGNED @TIME_T_UNSIGNED@
 
+#ifdef _WIN32
+  #if (_MSC_VER<  1500)
+    typedef struct _RTL_CONDITION_VARIABLE {
+      void* Ptr;
+    } RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE;
+    typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE, *PCONDITION_VARIABLE;
+  #endif
+#endif
+
+#ifdef __MINGW32__
+#define __try
+#define __except(x) if(0)
+ __declspec(dllimport) char * strtok_s(char *_Str,const char *_Delim,char **_Context);
+typedef void* RTL_SRWLOCK;
+typedef RTL_SRWLOCK SRWLOCK, *PSRWLOCK;
+#endif
+
 #endif
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/include/my_pthread.h mysql-5.5.20/include/my_pthread.h
--- mysql-5.5.20.orig/include/my_pthread.h	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/include/my_pthread.h	2012-01-17 15:49:51.139578000 +0100
@@ -53,6 +53,13 @@
   We use native conditions on Vista and later, and fallback to own 
   implementation on earlier OS version.
 */
+typedef enum 
+{
+    SIGNAL= 0,
+    BROADCAST= 1,
+    MAX_EVENTS= 2
+} EVENTS;
+    
 typedef union
 {
   /* Native condition (used on Vista and later) */
@@ -63,12 +70,6 @@
   { 
     uint32 waiting;
     CRITICAL_SECTION lock_waiting;
-    enum 
-    {
-      SIGNAL= 0,
-      BROADCAST= 1,
-      MAX_EVENTS= 2
-    } EVENTS;
     HANDLE events[MAX_EVENTS];
     HANDLE broadcast_block_event;
   };
@@ -99,11 +100,14 @@
   FILETIME ft;
   __int64 i64;
  };
-struct timespec {
+ 
+struct my_timespec {
   union ft64 tv;
   /* The max timeout value in millisecond for pthread_cond_timedwait */
   long max_timeout_msec;
 };
+#define timespec my_timespec
+
 #define set_timespec(ABSTIME,SEC) { \
   GetSystemTimeAsFileTime(&((ABSTIME).tv.ft)); \
   (ABSTIME).tv.i64+= (__int64)(SEC)*10000000; \
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/libmysql/authentication_win/common.h mysql-5.5.20/libmysql/authentication_win/common.h
--- mysql-5.5.20.orig/libmysql/authentication_win/common.h	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/libmysql/authentication_win/common.h	2012-01-17 14:41:15.567359900 +0100
@@ -70,7 +70,7 @@
                       const char *fmt, va_list args);
 
 template <error_log_level::type Level>
-void error_log_print(const char *fmt, ...)
+inline void error_log_print(const char *fmt, ...)
 {
   va_list args;
   va_start(args, fmt);
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/libmysql/authentication_win/handshake.h mysql-5.5.20/libmysql/authentication_win/handshake.h
--- mysql-5.5.20.orig/libmysql/authentication_win/handshake.h	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/libmysql/authentication_win/handshake.h	2012-01-16 21:03:14.895239000 +0100
@@ -100,7 +100,7 @@
   Handshake(const char *ssp, side_t side);
   virtual ~Handshake();
 
-  int Handshake::packet_processing_loop();
+  int packet_processing_loop();
 
   bool virtual is_complete() const
   {
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/scripts/CMakeLists.txt mysql-5.5.20/scripts/CMakeLists.txt
--- mysql-5.5.20.orig/scripts/CMakeLists.txt	2011-12-16 20:52:07.000000000 +0100
+++ mysql-5.5.20/scripts/CMakeLists.txt	2012-01-16 22:53:38.784705300 +0100
@@ -33,8 +33,7 @@
     ${CMAKE_CURRENT_BINARY_DIR}/mysql_fix_privilege_tables.sql
   )
 ELSEIF(WIN32)
-  FILE(TO_NATIVE_PATH ${CMAKE_CURRENT_BINARY_DIR}/mysql_fix_privilege_tables.sql
-   native_outfile )
+  string(REPLACE "/" "\\" native_outfile "${CMAKE_CURRENT_BINARY_DIR}/mysql_fix_privilege_tables.sql")
   SET(CAT_COMMAND
    COMMAND ${CMAKE_COMMAND} -E chdir ${CMAKE_CURRENT_SOURCE_DIR}
    cmd /c copy /b mysql_system_tables.sql + mysql_system_tables_fix.sql
diff -Nru -x '*~' -x mysql_fix_privilege_tables.sql mysql-5.5.20.orig/sql/mysqld.cc mysql-5.5.20/sql/mysqld.cc
--- mysql-5.5.20.orig/sql/mysqld.cc	2011-12-16 20:52:06.000000000 +0100
+++ mysql-5.5.20/sql/mysqld.cc	2012-01-17 00:38:57.908591400 +0100
@@ -143,6 +143,11 @@
 #endif
 
 #ifdef __WIN__ 
+#ifdef __MINGW32__
+//wtf??
+#undef __cplusplus
+#define MCW_PC _MCW_PC
+#endif
 #include <crtdbg.h>
 #endif
 
@@ -4708,7 +4713,7 @@
 	if (my_strcasecmp(system_charset_info, argv[1],"mysql"))
 	  load_default_groups[load_default_groups_sz-2]= argv[1];
         start_mode= 1;
-        Service.Init(argv[1], mysql_service);
+        Service.Init(argv[1], (void*)mysql_service);
         return 0;
       }
     }
@@ -4729,7 +4734,7 @@
 	start_mode= 1;
 	if (my_strcasecmp(system_charset_info, argv[2],"mysql"))
 	  load_default_groups[load_default_groups_sz-2]= argv[2];
-	Service.Init(argv[2], mysql_service);
+	Service.Init(argv[2], (void*)mysql_service);
 	return 0;
       }
     }
@@ -4762,7 +4767,7 @@
     {
       /* start the default service */
       start_mode= 1;
-      Service.Init(MYSQL_SERVICENAME, mysql_service);
+      Service.Init(MYSQL_SERVICENAME, (void*)mysql_service);
       return 0;
     }
   }
