Index: T:/svn-src/quazip/CMakeLists.txt
===================================================================
--- T:/svn-src/quazip/CMakeLists.txt	(Revision 239)
+++ T:/svn-src/quazip/CMakeLists.txt	(Arbeitskopie)
@@ -10,6 +10,7 @@
 
 if (Qt5Core_FOUND)
     set(QTCORE_LIBRARIES ${Qt5Core_LIBRARIES})
+    message(STATUS "Foot ${Qt5Core_LIBRARIES}")
     # if there is no QT_ROOT, try to deduce it from Qt QtCore include
     if ("${QT_ROOT}" STREQUAL "")
         set(QT_ROOT ${QT_QTCORE_INCLUDE_DIR}/../..)
@@ -32,22 +33,15 @@
     endmacro()
 endif()
 
-# Use system zlib on unix and Qt ZLIB on Windows
-IF(UNIX)
-	find_package(ZLIB REQUIRED)
-ELSE(UNIX)
-	SET(ZLIB_INCLUDE_DIRS "${QT_ROOT}/src/3rdparty/zlib" CACHE STRING "Path to ZLIB headers of Qt")
-	SET(ZLIB_LIBRARIES "")
-	IF(NOT EXISTS "${ZLIB_INCLUDE_DIRS}/zlib.h")
-		MESSAGE("Please specify a valid zlib include dir")
-	ENDIF(NOT EXISTS "${ZLIB_INCLUDE_DIRS}/zlib.h")
-ENDIF(UNIX)
+find_package(ZLIB REQUIRED)
 
+
 # All build libraries are moved to this directory
 SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})
 
 set(LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)")
-set(LIB_DESTINATION "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}" CACHE STRING "Library directory name" FORCE)
+set(LIB_DESTINATION "lib${LIB_SUFFIX}" CACHE STRING "Library directory name" FORCE)
+set(BIN_DESTINATION "bin" CACHE STRING "Executable directory name" FORCE)
 
 add_subdirectory(quazip)
 
Index: T:/svn-src/quazip/quazip/CMakeLists.txt
===================================================================
--- T:/svn-src/quazip/quazip/CMakeLists.txt	(Revision 239)
+++ T:/svn-src/quazip/quazip/CMakeLists.txt	(Arbeitskopie)
@@ -17,7 +17,7 @@
 add_library(quazip SHARED ${SRCS})
 set_target_properties(quazip PROPERTIES VERSION 1.0.0 SOVERSION 1)
 # Link against ZLIB_LIBRARIES if needed (on Windows this variable is empty)
-target_link_libraries(quazip ${QT_QTMAIN_LIBRARY} ${QT_QTCORE_LIBRARY} ${ZLIB_LIBRARIES})
+target_link_libraries(quazip ${QT_QTMAIN_LIBRARY} ${QTCORE_LIBRARIES} ${ZLIB_LIBRARIES})
 
 install(FILES ${PUBLIC_HEADERS} DESTINATION include/quazip)
-install(TARGETS quazip LIBRARY DESTINATION ${LIB_DESTINATION} ARCHIVE DESTINATION ${LIB_DESTINATION} RUNTIME DESTINATION ${LIB_DESTINATION})
+install(TARGETS quazip LIBRARY DESTINATION ${LIB_DESTINATION} ARCHIVE DESTINATION ${LIB_DESTINATION} RUNTIME DESTINATION ${BIN_DESTINATION})
