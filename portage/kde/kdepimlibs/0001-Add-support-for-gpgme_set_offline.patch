From e5da2316bc3331da56b2a7bb98f286d4b6fddcbe Mon Sep 17 00:00:00 2001
From: Andre Heinecke <aheinecke@intevation.de>
Date: Tue, 7 Jul 2015 17:24:08 +0200
Subject: [PATCH] Add support for gpgme_set_offline

gpgme_set_offline is required so that we can do a
CMS keylisting with verification but without CRL checks.

This is required to fix bug 339385.
---
 gpgme++/ConfigureChecks.cmake  |  9 +++++++++
 gpgme++/config-gpgme++.h.cmake |  3 +++
 gpgme++/context.cpp            | 15 +++++++++++++++
 gpgme++/context.h              |  3 +++
 4 files changed, 30 insertions(+)

diff --git a/gpgme++/ConfigureChecks.cmake b/gpgme++/ConfigureChecks.cmake
index 4075109..14ccbb0 100644
--- a/gpgme++/ConfigureChecks.cmake
+++ b/gpgme++/ConfigureChecks.cmake
@@ -429,6 +429,15 @@ check_cxx_source_compiles ("
   }
 " HAVE_GPGME_CONF_ARG_NEW_WITH_CONST_VALUE )
 
+# check if gpgme has offline mode support (new in 1.5.6)
+check_cxx_source_compiles ("
+  #include <gpgme.h>
+  int main() {
+     gpgme_set_offline( NULL, 1 );
+     return 0;
+  }
+" HAVE_GPGME_CTX_OFFLINE )
+
 set(CMAKE_EXTRA_INCLUDE_FILES gpgme.h)
 # defined in gpgme versions >= 1.4.2
 check_type_size(gpgme_ssize_t GPGME_SSIZE_T)
diff --git a/gpgme++/config-gpgme++.h.cmake b/gpgme++/config-gpgme++.h.cmake
index 982f5cd..c5a6cfd 100644
--- a/gpgme++/config-gpgme++.h.cmake
+++ b/gpgme++/config-gpgme++.h.cmake
@@ -124,6 +124,9 @@ static inline void gpg_err_set_errno( int x ) { errno = x; }
 /* Define to 1 if your gpgme_conf_arg_new takes its 'value' parameter as const void* */
 #cmakedefine HAVE_GPGME_CONF_ARG_NEW_WITH_CONST_VALUE 1
 
+/* Define to 1 if gpgme supports the context offline mode* */
+#cmakedefine HAVE_GPGME_CTX_OFFLINE 1
+
 #ifndef GPGMEPP_ERR_SOURCE_DEFAULT
 #define GPGMEPP_ERR_SOURCE_DEFAULT 22
 #endif
diff --git a/gpgme++/context.cpp b/gpgme++/context.cpp
index dbde058..4c0eaf3 100644
--- a/gpgme++/context.cpp
+++ b/gpgme++/context.cpp
@@ -342,6 +342,21 @@ namespace GpgME {
     return gpgme_get_textmode( d->ctx );
   }
 
+  void Context::setOffline( bool useOfflineMode ) {
+#ifdef HAVE_GPGME_CTX_OFFLINE
+    gpgme_set_offline( d->ctx, int( useOfflineMode ) );
+#else
+    Q_UNUSED( useOfflineMode );
+#endif
+  }
+  bool Context::offline() const {
+#ifdef HAVE_GPGME_CTX_OFFLINE
+    return gpgme_get_offline ( d->ctx );
+#else
+    return false;
+#endif
+  }
+
   void Context::setIncludeCertificates( int which ) {
     if ( which == DefaultCertificates ) {
 #ifdef HAVE_GPGME_INCLUDE_CERTS_DEFAULT
diff --git a/gpgme++/context.h b/gpgme++/context.h
index 70e4733..9d1058b 100644
--- a/gpgme++/context.h
+++ b/gpgme++/context.h
@@ -82,6 +82,9 @@ namespace GpgME {
     void setTextMode( bool useTextMode );
     bool textMode() const;
 
+    void setOffline( bool useOfflineMode );
+    bool offline() const;
+
     enum CertificateInclusion {
       DefaultCertificates = -256,
       AllCertificatesExceptRoot = -2,
-- 
1.9.1

