diff -Nru rocs-4.7.0.orig/src/Interface/GraphScene.h rocs-4.7.0/src/Interface/GraphScene.h
--- rocs-4.7.0.orig/src/Interface/GraphScene.h	2011-06-22 16:53:03.000000000 +0200
+++ rocs-4.7.0/src/Interface/GraphScene.h	2011-08-22 20:28:24.707860500 +0200
@@ -39,9 +39,8 @@
     Q_OBJECT
 public:
     GraphScene( QObject *parent=0 );
-
+    enum borderSize{ kBORDER = 50 };
     void updateMinSize(qreal minWidth, qreal minHeight);
-    static const qreal kBORDER = 50;
     void setAction(QAction *action);
     void updateGraph(DataStructure *g);
     void updateDocument();
diff -Nru rocs-4.7.0.orig/src/Plugins/DataStructure/Graph/GraphStructure.h rocs-4.7.0/src/Plugins/DataStructure/Graph/GraphStructure.h
--- rocs-4.7.0.orig/src/Plugins/DataStructure/Graph/GraphStructure.h	2011-06-22 16:53:03.000000000 +0200
+++ rocs-4.7.0/src/Plugins/DataStructure/Graph/GraphStructure.h	2011-08-22 20:27:22.017274800 +0200
@@ -24,8 +24,11 @@
 #include "DataStructure.h"
 
 namespace Rocs{
-class ROCSLIB_EXPORT GraphStructure : public DataStructure {
+class GraphStructure : public DataStructure {
   Q_OBJECT
+  Q_PROPERTY (GRAPH_TYPE graphType READ graphType WRITE setGraphType)
+  Q_PROPERTY (bool directed READ directed)
+  Q_ENUMS(GRAPH_TYPE)
   public:
     typedef enum {
         UNDIRECTED,
diff -Nru rocs-4.7.0.orig/src/Plugins/TransformEdges/CMakeLists.txt rocs-4.7.0/src/Plugins/TransformEdges/CMakeLists.txt
--- rocs-4.7.0.orig/src/Plugins/TransformEdges/CMakeLists.txt	2011-05-20 22:34:30.000000000 +0200
+++ rocs-4.7.0/src/Plugins/TransformEdges/CMakeLists.txt	2011-08-22 20:27:22.020275000 +0200
@@ -12,7 +12,6 @@
 
 kde4_add_plugin(rocs_transformedgesplugin ${TransformEdgesToolsPlugin_SRC} )
 target_link_libraries( rocs_transformedgesplugin
-                       rocs_GraphStructure
                        ${KDE4_KDEUI_LIBS}
                        rocslib)
                             
diff -Nru rocs-4.7.0.orig/src/Plugins/TransformEdges/transformedgeswidget.cpp rocs-4.7.0/src/Plugins/TransformEdges/transformedgeswidget.cpp
--- rocs-4.7.0.orig/src/Plugins/TransformEdges/transformedgeswidget.cpp	2011-06-22 16:53:03.000000000 +0200
+++ rocs-4.7.0/src/Plugins/TransformEdges/transformedgeswidget.cpp	2011-08-22 20:27:22.023275200 +0200
@@ -35,14 +35,13 @@
 #include <Document.h>
 #include <DataStructure.h>
 #include <DocumentManager.h>
-#include "../DataStructure/Graph/GraphStructure.h"
 #include <Pointer.h>
 #include <Data.h>
 
 
 //TODO output usefull error message
 namespace boost { void throw_exception( std::exception const & ) {} } // do noop on exception
-using namespace Rocs;
+
 
 class QPushButton;
 
@@ -101,11 +100,8 @@
 
 void TransformEdgesWidget::makeComplete( DataStructure* graph )
 {
-    GraphStructure* graphDS = qobject_cast<Rocs::GraphStructure *>(graph);
-    if( !graphDS ) 
-        return;
-        
-    bool directed = graphDS->directed();
+
+    bool directed = graph->property("directed").toBool();
 
     foreach ( Pointer *e, graph->pointers() ) {
         graph->remove ( e );
@@ -138,15 +134,11 @@
 
 void TransformEdgesWidget::reverseAllEdges( DataStructure* graph )
 {
-    GraphStructure* graphDS = qobject_cast<Rocs::GraphStructure *>(graph);
-    if( !graphDS ) 
+    if (! graph->property("directed").toBool())
         return;
 
-    if (graphDS->directed()==false)
-        return;
-        
     QList< QPair<Data*, Data*> > newPointers;
-    foreach ( Pointer *e, graphDS->pointers() ) {
+    foreach ( Pointer *e, graph->pointers() ) {
         newPointers << QPair<Data*, Data*>(e->to(), e->from());
         graph->remove ( e );
     }
@@ -159,11 +151,8 @@
 
 qreal TransformEdgesWidget::makeSpanningTree(DataStructure* graph)
 {
-    GraphStructure* graphDS = qobject_cast<Rocs::GraphStructure *>(graph);
-    if( !graphDS ) 
-        return 0;
 
-    QList<Data*> vertices = graphDS->dataList();
+    QList<Data*> vertices = graph->dataList();
     int n = vertices.size();
 
     /*
@@ -203,7 +192,7 @@
         if (i==j)   weight[QPair<int,int>(i,j)] = 0;
         
         PointerList out;
-        if (graphDS->directed())  
+        if (graph->property("directed").toBool())
             out = vertices[i]->out_pointers();
         else 
             out = vertices[i]->adjacent_pointers();
