diff -Nru -x '*~' libkolab-0.4.1.orig/CMakeLists.txt libkolab-0.4.1/CMakeLists.txt
--- libkolab-0.4.1.orig/CMakeLists.txt	2013-01-09 13:59:23.000000000 +0100
+++ libkolab-0.4.1/CMakeLists.txt	2013-02-15 12:42:24.545180800 +0100
@@ -72,7 +72,9 @@
     add_definitions(-DKDEPIMLIBS_VERSION_DEVEL)
 endif()
 
-set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wnon-virtual-dtor -Wno-long-long -ansi -Wundef -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -Wformat-security -fno-exceptions -DQT_NO_EXCEPTIONS -fno-check-new -fno-common -Woverloaded-virtual -fno-threadsafe-statics -fvisibility=hidden -Werror=return-type -fvisibility-inlines-hidden -fexceptions -UQT_NO_EXCEPTIONS -fPIC -g" )
+if(CMAKE_COMPILER_IS_GNUCXX)
+    set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wnon-virtual-dtor -Wno-long-long -ansi -Wundef -Wcast-align -Wchar-subscripts -Wall -W -Wpointer-arith -Wformat-security -fno-exceptions -DQT_NO_EXCEPTIONS -fno-check-new -fno-common -Woverloaded-virtual -fno-threadsafe-statics -fvisibility=hidden -Werror=return-type -fvisibility-inlines-hidden -fexceptions -UQT_NO_EXCEPTIONS -fPIC -g" )
+endif()
 # message("${CMAKE_CXX_FLAGS}")
 
 if (USE_LIBCALENDARING)
@@ -80,7 +82,7 @@
     set( KDE_LIBRARIES ${Libcalendaring_LIBRARIES} )
     message("${Libcalendaring_INCLUDE_DIRS} ${Libcalendaring_LIBRARIES}")
 else()
-    set( KDE_INCLUDES ${KDEPIMLIBS_INCLUDE_DIRS} ${KDE4_INCLUDE_DIR})
+    set( KDE_INCLUDES ${KDEPIMLIBS_INCLUDE_DIRS} ${KDE4_INCLUDES})
     set( KDE_LIBRARIES
         ${KDEPIMLIBS_KCALCORE_LIBS}
         ${KDEPIMLIBS_KABC_LIBS}
@@ -89,8 +91,8 @@
         ${KDEPIMLIBS_AKONADI_NOTES_LIBS}
         ${KDEPIMLIBS_KCALUTILS_LIBS}
         ${KDEPIMLIBS_KPIMUTILS_LIBS}
-        ${KDE4_KDECORE_LIBRARY}
-        ${KDE4_KIO_LIBRARY}
+        ${KDE4_KDECORE_LIBS}
+        ${KDE4_KIO_LIBS}
         )
 endif()
 
@@ -145,13 +147,15 @@
     enable_testing()
     add_library(kolab_static STATIC ${KOLAB_SRCS})
     target_link_libraries(kolab_static ${KOLAB_LINK_LIBRARIES})
+    set_target_properties(kolab_static PROPERTIES COMPILE_FLAGS "-DKOLAB_STATIC_LIBS")
     add_subdirectory(tests)
 endif(BUILD_TESTS)
 
 add_library(kolab SHARED ${KOLAB_SRCS})
 target_link_libraries(kolab ${KOLAB_LINK_LIBRARIES})
 set_target_properties(kolab PROPERTIES VERSION ${Libkolab_VERSION}
-                                     SOVERSION ${Libkolab_VERSION_MAJOR} )
+                                       SOVERSION ${Libkolab_VERSION_MAJOR}
+                                       DEFINE_SYMBOL MAKE_KOLAB_LIB)
 
 install(TARGETS kolab EXPORT LibkolabExport 
     RUNTIME DESTINATION ${BIN_INSTALL_DIR}
diff -Nru -x '*~' libkolab-0.4.1.orig/kolab_export.h libkolab-0.4.1/kolab_export.h
--- libkolab-0.4.1.orig/kolab_export.h	2013-01-09 13:59:23.000000000 +0100
+++ libkolab-0.4.1/kolab_export.h	2013-02-15 12:42:24.555180900 +0100
@@ -21,7 +21,7 @@
 #ifndef KOLAB_EXPORT_H
 #define KOLAB_EXPORT_H
 
-// #include <kdemacros.h>
+#include <qglobal.h>
 
 #ifndef KOLAB_EXPORT
 # if defined(KOLAB_STATIC_LIBS)
@@ -29,15 +29,15 @@
 #  define KOLAB_EXPORT
 # elif defined(MAKE_KOLAB_LIB)
 /* We are building this library */
-#  define KOLAB_EXPORT __attribute__ ((visibility("default")))
+#  define KOLAB_EXPORT Q_DECL_EXPORT
 # else
 /* We are using this library */
-#  define KOLAB_EXPORT __attribute__ ((visibility("default")))
+#  define KOLAB_EXPORT Q_DECL_IMPORT
 # endif
 #endif
 
 # ifndef KOLAB_EXPORT_DEPRECATED
-#  define KOLAB_EXPORT_DEPRECATED KDE_DEPRECATED __attribute__ ((visibility("default")))
+#  define KOLAB_EXPORT_DEPRECATED QT_DEPRECATED Q_DECL_EXPORT
 # endif
 
 /**
diff -Nru -x '*~' libkolab-0.4.1.orig/tests/CMakeLists.txt libkolab-0.4.1/tests/CMakeLists.txt
--- libkolab-0.4.1.orig/tests/CMakeLists.txt	2013-01-09 13:59:23.000000000 +0100
+++ libkolab-0.4.1/tests/CMakeLists.txt	2013-02-15 12:42:24.560180900 +0100
@@ -1,6 +1,6 @@
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
-add_definitions(-DTEST_DATA_PATH="${CMAKE_CURRENT_SOURCE_DIR}")
+add_definitions(-DTEST_DATA_PATH="${CMAKE_CURRENT_SOURCE_DIR}" -DKOLAB_STATIC_LIBS)
 
 macro(addTest TEST_NAME)
     QT4_AUTOMOC(${TEST_NAME}.cpp)
