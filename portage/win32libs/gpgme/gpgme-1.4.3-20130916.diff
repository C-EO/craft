diff -Nru -x '*~' gpgme-1.4.3.orig/src/ath.h gpgme-1.4.3/src/ath.h
--- gpgme-1.4.3.orig/src/ath.h	2013-05-16 15:48:55.000000000 +0200
+++ gpgme-1.4.3/src/ath.h	2013-09-16 23:45:04.344904300 +0200
@@ -23,6 +23,22 @@
 
 #ifdef HAVE_STDINT_H
 #include <stdint.h>
+#else
+#ifdef _MSC_VER
+# include <BaseTsd.h>  // do this for SSIZE_T
+# ifndef _SSIZE_T_DEFINED
+# define _SSIZE_T_DEFINED
+  typedef SSIZE_T ssize_t;
+# endif
+# ifndef _SIZE_T_DEFINED
+# define _SIZE_T_DEFINED
+  typedef unsigned size_t;
+# endif
+# ifndef _PID_T_DEFINED
+# define _PID_T_DEFINED
+  typedef int pid_t;
+# endif
+#endif
 #endif
 #ifdef HAVE_W32_SYSTEM
   /* fixme: Check how we did it in libgcrypt.  */
@@ -32,7 +48,9 @@
 #  include <winsock2.h>
 # endif
 # include <windows.h>
-# include <io.h>
+# ifndef HAVE_W32CE_SYSTEM
+#  include <io.h>
+# endif
 
 #else /*!HAVE_W32_SYSTEM*/
 
@@ -43,12 +61,11 @@
 #   include <sys/time.h>
 #  endif
 # endif
-# ifdef HAVE_SYS_TYPES_H
-#  include <sys/types.h>
-# endif
 # include <sys/socket.h>
-
 #endif  /*!HAVE_W32_SYSTEM*/
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
 
 
 
diff -Nru -x '*~' gpgme-1.4.3.orig/src/debug.c gpgme-1.4.3/src/debug.c
--- gpgme-1.4.3.orig/src/debug.c	2013-05-08 20:42:31.000000000 +0200
+++ gpgme-1.4.3/src/debug.c	2013-09-16 23:45:04.353904800 +0200
@@ -48,6 +48,10 @@
 #include "sema.h"
 #include "debug.h"
 
+#if defined(HAVE_W32CE_SYSTEM) && !defined(_IOLBF)
+#define _IOLBF 1
+#endif
+
 
 /* Lock to serialize initialization of the debug output subsystem and
    output of actual debug messages.  */
diff -Nru -x '*~' gpgme-1.4.3.orig/src/dirinfo.c gpgme-1.4.3/src/dirinfo.c
--- gpgme-1.4.3.orig/src/dirinfo.c	2013-08-02 15:16:36.000000000 +0200
+++ gpgme-1.4.3/src/dirinfo.c	2013-09-17 01:57:56.065860600 +0200
@@ -31,6 +31,10 @@
 #include "sema.h"
 #include "sys-util.h"
 
+#ifndef F_OK
+# define F_OK 0
+#endif
+
 DEFINE_STATIC_LOCK (dirinfo_lock);
 
 /* Constants used internally to select the data.  */
diff -Nru -x '*~' gpgme-1.4.3.orig/src/engine-assuan.c gpgme-1.4.3/src/engine-assuan.c
--- gpgme-1.4.3.orig/src/engine-assuan.c	2013-02-07 21:04:26.000000000 +0100
+++ gpgme-1.4.3/src/engine-assuan.c	2013-09-16 23:45:04.363905400 +0200
@@ -649,7 +649,7 @@
      using the assumption that the first returned fd from
      assuan_get_active_fds() is always this one.  */
   nfds = assuan_get_active_fds (llass->assuan_ctx, 0 /* read fds */,
-                                afdlist, DIM (afdlist));
+                                (assuan_fd_t*)afdlist, DIM (afdlist));
   if (nfds < 1)
     return gpg_error (GPG_ERR_GENERAL);	/* FIXME */
   /* For now... */
diff -Nru -x '*~' gpgme-1.4.3.orig/src/gpgme-tool.c gpgme-1.4.3/src/gpgme-tool.c
--- gpgme-1.4.3.orig/src/gpgme-tool.c	2013-08-09 17:54:47.000000000 +0200
+++ gpgme-1.4.3/src/gpgme-tool.c	2013-09-17 01:58:02.413223700 +0200
@@ -26,7 +26,6 @@
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
-#include <getopt.h>
 #include <ctype.h>
 #include <stdarg.h>
 #ifdef HAVE_LOCALE_H
@@ -35,9 +34,14 @@
 #ifdef HAVE_ARGP_H
 #include <argp.h>
 #endif
+#ifndef X_OK
+# define X_OK 1
+#endif
 
 #include <assuan.h>
 
+#include <gpg-error.h>
+
 #include "gpgme.h"
 
 /* GCC attributes.  */
@@ -81,7 +85,7 @@
 
 extern const char *argp_program_version;
 extern const char *argp_program_bug_address;
-extern error_t argp_err_exit_status;
+extern gpg_error_t argp_err_exit_status;
 
 struct argp_option
 {
@@ -127,7 +131,7 @@
 #define ARGP_KEY_FINI 0x1000007
 #define ARGP_KEY_SUCCESS 0x1000004
 #define ARGP_KEY_ERROR 0x1000005
-typedef error_t (*argp_parser_t) (int key, char *arg, struct argp_state *state);
+typedef gpg_error_t (*argp_parser_t) (int key, char *arg, struct argp_state *state);
 
 struct argp
 {
@@ -308,7 +312,7 @@
 }
 
 
-error_t
+gpg_error_t
 argp_parse (const struct argp *argp, int argc,
 	    char **argv, unsigned flags, int *arg_index, void *input)
 {
@@ -744,8 +748,9 @@
 gpg_error_t
 result_xml_indent (struct result_xml_state *state)
 {
-  char spaces[state->indent + 1];
+  char *spaces;
   int i;
+  spaces = (char*)malloc(state->indent + 1);
   for (i = 0; i < state->indent; i++)
     spaces[i] = ' ';
   spaces[i] = '\0';
@@ -3638,8 +3643,9 @@
 /* MAIN PROGRAM STARTS HERE.  */
 
 const char *argp_program_version = VERSION;
-const char *argp_program_bug_address = "bug-gpgme@gnupg.org";
-error_t argp_err_exit_status = 1;
+//const char *argp_program_bug_address = "bug-gpgme@gnupg.org";
+const char *argp_program_bug_address = "kde-windows@kde.org";
+gpg_error_t argp_err_exit_status = 1;
 
 static char doc[] = "GPGME Tool -- Assuan server exposing GPGME operations";
 static char args_doc[] = "COMMAND [OPTIONS...]";
@@ -3650,7 +3656,7 @@
   { 0 }
 };
 
-static error_t parse_options (int key, char *arg, struct argp_state *state);
+static gpg_error_t parse_options (int key, char *arg, struct argp_state *state);
 static struct argp argp = { options, parse_options, args_doc, doc };
 
 struct args
@@ -3667,7 +3673,7 @@
 }
 
 
-static error_t
+static gpg_error_t
 parse_options (int key, char *arg, struct argp_state *state)
 {
   struct args *args = state->input;
diff -Nru -x '*~' gpgme-1.4.3.orig/src/gpgme.c gpgme-1.4.3/src/gpgme.c
--- gpgme-1.4.3.orig/src/gpgme.c	2013-08-02 12:43:12.000000000 +0200
+++ gpgme-1.4.3/src/gpgme.c	2013-09-17 01:16:29.386630700 +0200
@@ -688,7 +688,7 @@
       ret = _gpgme_io_write (fd, buffer, count);
       if (ret < 0)
         break;
-      buffer += ret;
+      buffer = (char *) buffer + ret;
       count -= ret;
       ret = 0;
     }
diff -Nru -x '*~' gpgme-1.4.3.orig/src/gpgme.h.in gpgme-1.4.3/src/gpgme.h.in
--- gpgme-1.4.3.orig/src/gpgme.h.in	2013-08-09 17:13:58.000000000 +0200
+++ gpgme-1.4.3/src/gpgme.h.in	2013-09-17 02:03:13.483015900 +0200
@@ -43,7 +43,29 @@
 #endif
 #endif /* __cplusplus */
 
-@INSERT__TYPEDEFS_FOR_GPGME_H@
+/* Figure out platform dependent typedefs for gpgme.h */
+#if defined(_WIN32) || defined(_WIN64)
+#ifdef _WIN64
+# include <stdint.h>
+  typedef int64_t gpgme_off_t;
+  typedef int64_t gpgme_ssize_t;
+# ifndef _PID_T_
+    typedef __int64 pid_t;
+#  define _PID_T_
+# endif
+#else /* _WIN32 */
+  typedef long gpgme_off_t;
+  typedef long gpgme_ssize_t;
+# ifndef _PID_T_
+    typedef int pid_t;
+#  define _PID_T_
+# endif
+#endif /* _WIN32 */
+#else
+# include <sys/types.h>
+  typedef off_t   gpgme_off_t;
+  typedef ssize_t gpgme_ssize_t;
+#endif
 
 
 /* Check for compiler features.  */
diff -Nru -x '*~' gpgme-1.4.3.orig/src/key.c gpgme-1.4.3/src/key.c
--- gpgme-1.4.3.orig/src/key.c	2013-02-06 17:36:24.000000000 +0100
+++ gpgme-1.4.3/src/key.c	2013-09-16 23:45:04.407907900 +0200
@@ -390,7 +390,7 @@
     return err;
 
   /* Note: protocol doesn't matter if only email is provided.  */
-  err = _gpgme_key_append_name (key, name, 0);
+  err = _gpgme_key_append_name (key, (char*)name, 0);
   if (err)
     gpgme_key_unref (key);
   else
diff -Nru -x '*~' gpgme-1.4.3.orig/src/w32-ce.h gpgme-1.4.3/src/w32-ce.h
--- gpgme-1.4.3.orig/src/w32-ce.h	2012-09-25 15:46:40.000000000 +0200
+++ gpgme-1.4.3/src/w32-ce.h	2013-09-16 23:45:04.434909400 +0200
@@ -37,7 +37,9 @@
 #define getenv _gpgme_wince_getenv
 char *getenv (const char *name);
 
+#ifndef _WIN32_WCE
 #include <io.h>
+#endif
 #define isatty(fd) 0
 
 
diff -Nru -x '*~' gpgme-1.4.3.orig/src/w32-io.c gpgme-1.4.3/src/w32-io.c
--- gpgme-1.4.3.orig/src/w32-io.c	2013-05-11 15:47:00.000000000 +0200
+++ gpgme-1.4.3/src/w32-io.c	2013-09-16 23:53:44.301644100 +0200
@@ -27,14 +27,18 @@
 #include <string.h>
 #include <assert.h>
 #include <errno.h>
+#ifndef HAVE_W32CE_SYSTEM
 #include <fcntl.h>
+#endif
 #ifdef HAVE_SYS_TIME_H
 # include <sys/time.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
 # include <sys/types.h>
 #endif
+#ifdef HAVE_IO_H
 #include <io.h>
+#endif
 
 #include "util.h"
 
@@ -1635,7 +1639,7 @@
 
       /* Make it inheritable for the wrapper process.  */
       if (fd >= 0 && fd < MAX_SLAFD && fd_table[fd].used)
-	ohd = fd_table[fd].handle;
+	ohd = (HANDLE)fd_table[fd].handle;
 
       if (!DuplicateHandle (GetCurrentProcess(), ohd,
 			    pi.hProcess, &hd, 0, TRUE, DUPLICATE_SAME_ACCESS))
@@ -1656,7 +1660,7 @@
 	  return TRACE_SYSRES (-1);
         }
       /* Return the child name of this handle.  */
-      fd_list[i].peer_name = handle_to_fd (hd);
+      fd_list[i].peer_name = (int) (hd);
     }
 
   /* Write the handle translation information to the temporary
diff -Nru -x '*~' gpgme-1.4.3.orig/src/w32-sema.c gpgme-1.4.3/src/w32-sema.c
--- gpgme-1.4.3.orig/src/w32-sema.c	2012-09-25 15:46:40.000000000 +0200
+++ gpgme-1.4.3/src/w32-sema.c	2013-09-16 23:45:04.463911100 +0200
@@ -27,14 +27,18 @@
 #include <string.h>
 #include <assert.h>
 #include <errno.h>
-#include <fcntl.h>
+#ifdef HAVE_FCNTL_H
+# include <fcntl.h>
+#endif
 #ifdef HAVE_SYS_TIME_H
 # include <sys/time.h>
 #endif
 #ifdef HAVE_SYS_TYPES_H
 # include <sys/types.h>
 #endif
+#ifdef HAVE_IO_H
 #include <io.h>
+#endif
 
 #include "util.h"
 #include "sema.h"
diff -Nru -x '*~' gpgme-1.4.3.orig/src/w32-util.c gpgme-1.4.3/src/w32-util.c
--- gpgme-1.4.3.orig/src/w32-util.c	2013-08-02 14:25:23.000000000 +0200
+++ gpgme-1.4.3/src/w32-util.c	2013-09-17 02:04:29.463361700 +0200
@@ -27,7 +27,11 @@
 #include <string.h>
 #include <assert.h>
 #include <errno.h>
-#include <stdint.h>
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#else
+# define uint64_t unsigned __int64
+#endif
 #ifdef HAVE_SYS_TIME_H
 # include <sys/time.h>
 #endif
@@ -40,12 +44,16 @@
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
 #endif
-#include <fcntl.h>
-#include <io.h>
+#ifdef HAVE_FCNTL_H
+# include <fcntl.h>
+#endif
+#ifdef HAVE_IO_H
+# include <io.h>
+#endif
 
 #if __MINGW64_VERSION_MAJOR >= 2
 # define _WIN32_IE 0x0501 /* Required by mingw64 toolkit.  */
-#else
+#elseif __MINGW64_VERSION_MAJOR
 # define _WIN32_IE 0x0400 /* Required for SHGetSpecialFolderPathA.  */
 #endif
 
@@ -70,6 +78,8 @@
 #endif
 #ifndef F_OK
 # define F_OK 0
+# define S_IRUSR _S_IREAD
+# define S_IWUSR _S_IWRITE
 #endif
 
 
diff -Nru -x '*~' gpgme-1.4.3.orig/tests/run-support.h gpgme-1.4.3/tests/run-support.h
--- gpgme-1.4.3.orig/tests/run-support.h	2012-09-25 15:46:40.000000000 +0200
+++ gpgme-1.4.3/tests/run-support.h	2013-09-16 23:45:04.488912500 +0200
@@ -18,7 +18,9 @@
    License along with this program; if not, see <http://www.gnu.org/licenses/>.
 */
 
+#ifndef HAVE_W32_SYSTEM
 #include <unistd.h>
+#endif
 #include <errno.h>
 #include <stdlib.h>
 #include <locale.h>
